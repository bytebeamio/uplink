#!/bin/bash

# Download GNU ARM cross compiler tools
sudo apt-get install gcc gcc-aarch64-linux-gnu

# Download U-boot
git clone git://git.denx.de/u-boot.git
cd u-boot
make ARCH=arm CROSS_COMPILE=aarch64-linux-gnu- rpi_3_b_plus_defconfig
make ARCH=arm CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)

# Copy u-boot.bin to /boot on RPI
cp uboot.bin /path/to/rpi/boot

# Make the following changes to kernel8.img(or kernel7.img) in /boot in Pi
cp kernel8.img _kernel8.img.cpy
mv _kernel8.img.cpy _kernel8.img.gz
gunzip _kernel8.img.gz

# Add the following lines to config.txt
kernel=u-boot.bin
enable_uart=1

# Reboot the system, U-boot should be loaded
# In the U-boot environment, use the following commands to load the kernel

fatload mmc 0:1 ${kernel_addr_r} _kernel8.img
booti ${kernel_addr_r} - ${fdt_addr}

# fdt_addr value is provided by first stage boot loader by default.
# If you want to define your own fdt_value, use the following commands
setenv fdtfile bcm2710-rpi-3-b-plus.dtb
fatload mmc 0:1 ${fdt_addr_r} ${fdtfile}
booti ${kernel_addr_r} - ${fdt_addr_r}


