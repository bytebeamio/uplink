# TCP Port to connect your applications with uplink
bridge_port = 5555

# MQTT client configuration
# 
# Required Parameters
# - max_packet_size: Maximum packet size acceptable for MQTT messages
# - max_inflight: Maximum number of outgoing QoS 1/2 messages that can be
#                 handled by uplink, at a time, requiring acknowledgedment.
max_packet_size = 102400
max_inflight = 100

# Whitelist of binaries which uplink can spawn as a process
# This makes sure that user is protected against random actions
# triggered from cloud.
actions = ["tunshell"]

# Configuration details associated with uplink's persistent storage module
# which writes publish packets to disk in case of slow or crashed network.
# 
# Required Parameters
# - path: Path to directory where storage writes backups into files.
# - max_file_size: Maximum size upto which single persistence file can grow
# - max_file_count: Maximum number of persistence files allowed
#
# NOTE: Persitence as a whole is an optional feature that is disabled by
# default, i.e. if not inlcuded in configuration.
[persistence]
path = "/tmp/uplink"
max_file_size = 104857600 # 100MB
max_file_count = 3

# Table of pre-configured data streams
#
# Required Parameters
# - buf-size: Number of data points that shall be included in each Publish
# - topic(optional): topic-filter to which data shall be published. If left
#   unconfigured, stream will be created dynamically.
# - flush-period(optional): Duration in seconds after a data point enters the stream
#   and WILL be flushed by collector. Defaults to 60s in case not configured.
#
# NOTE: The metrics stream is one to which the Serializer Metrics module
# publishes associated data onto, to keep track of serializer performance.
[streams.metrics]
buf_size = 10
flush_period = 30

# The action_status stream is used to push progress of Actions in execution
#
# NOTE: Action statuses are expected on a specifc topic as configured below.
[streams.action_status]
topic = "/tenants/{tenant_id}/devices/{device_id}/action/status"
buf_size = 1

# Set buf_size to 1 for the device_shadow stream
[streams.device_shadow]
buf_size = 1

# Configurations associated with the OTA module of uplink, if enabled Actions
# with `name: "update_firmware"` can trigger the OtaDownloader to download the
# OTA package.
#
# Required Parameters
# - enabled: A boolean to determine if the feature must be enabled
# - path: The location in file system where uplink will download and store
#         OTA update files into.
[ota]
enabled = true
path = "/var/tmp/ota-file"

# Configurations associated with the system stats module of uplink, if enabled
# system stats such as memory in use and CPU usage will be published onto special.
#
# Required Parameters
# - enabled: A boolean to determine if the feature must be enabled
# - process_names: List of processes which are to be tracked in system stats
# - update_period: Time in seconds between each collection/publish of system stats
[stats]
enabled = false
process_names = ["uplink"]
update_period = 30

# Configurations associated with running uplink in simulator mode, if enabled 
# uplink will push simulated data for device_id 1..=num_devices and respond to any
# actions triggered on the tenant connected to, with progress 0..=100.
# NOTE: uplink bridge will hence be turned off.
#
# Required Parameters
# - num_devices: number of devices to be simulated
# - gps_paths: path to directory containing files with gps paths to be used in simulation
# [simulator]
# num_devices = 10
# gps_paths = "./paths/"
